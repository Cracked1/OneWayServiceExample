//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OneWayServiceExample.Client.Services {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Services.IExampleService")]
    public interface IExampleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IExampleService/DoWork", ReplyAction="http://tempuri.org/IExampleService/DoWorkResponse")]
        long DoWork();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IExampleService/DoWork", ReplyAction="http://tempuri.org/IExampleService/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        long EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IExampleService/DoOneWayWork")]
        void DoOneWayWork();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IExampleService/DoOneWayWork")]
        System.IAsyncResult BeginDoOneWayWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoOneWayWork(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExampleServiceChannel : OneWayServiceExample.Client.Services.IExampleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoWorkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoWorkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExampleServiceClient : System.ServiceModel.ClientBase<OneWayServiceExample.Client.Services.IExampleService>, OneWayServiceExample.Client.Services.IExampleService {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginDoOneWayWorkDelegate;
        
        private EndOperationDelegate onEndDoOneWayWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoOneWayWorkCompletedDelegate;
        
        public ExampleServiceClient() {
        }
        
        public ExampleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExampleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExampleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExampleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<DoWorkCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoOneWayWorkCompleted;
        
        public long DoWork() {
            return base.Channel.DoWork();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndDoWork(System.IAsyncResult result) {
            return base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            long retVal = this.EndDoWork(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new DoWorkCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        public void DoOneWayWork() {
            base.Channel.DoOneWayWork();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoOneWayWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoOneWayWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDoOneWayWork(System.IAsyncResult result) {
            base.Channel.EndDoOneWayWork(result);
        }
        
        private System.IAsyncResult OnBeginDoOneWayWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginDoOneWayWork(callback, asyncState);
        }
        
        private object[] OnEndDoOneWayWork(System.IAsyncResult result) {
            this.EndDoOneWayWork(result);
            return null;
        }
        
        private void OnDoOneWayWorkCompleted(object state) {
            if ((this.DoOneWayWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoOneWayWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoOneWayWorkAsync() {
            this.DoOneWayWorkAsync(null);
        }
        
        public void DoOneWayWorkAsync(object userState) {
            if ((this.onBeginDoOneWayWorkDelegate == null)) {
                this.onBeginDoOneWayWorkDelegate = new BeginOperationDelegate(this.OnBeginDoOneWayWork);
            }
            if ((this.onEndDoOneWayWorkDelegate == null)) {
                this.onEndDoOneWayWorkDelegate = new EndOperationDelegate(this.OnEndDoOneWayWork);
            }
            if ((this.onDoOneWayWorkCompletedDelegate == null)) {
                this.onDoOneWayWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoOneWayWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoOneWayWorkDelegate, null, this.onEndDoOneWayWorkDelegate, this.onDoOneWayWorkCompletedDelegate, userState);
        }
    }
}
